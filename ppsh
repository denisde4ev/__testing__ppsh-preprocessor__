#!/bin/sh

case $1 in --help)
	printf %s\\n \
		"Usage: ${0##*/} [file]" \
	;
	exit
esac


main() {
	IFS=''

	if_lvl=0
	unset if_bool
	line_num=0

	while read -r line; do
		line_s=${line##*[! 	]} # just end of line spaces/tabs (not needed for all preprocess commands)
		
		case $line in
			"#define "*) ppsh_define;;
			"#undef "*) ppsh_undef;;

			"#dumpvar "*) ppsh_dumpvar;;

			"#ifdef "*) ppsh_ifdef;;
			"#else$line_s") ppsh_else;;
			"#endif$line_s") ppsh_endif;;

			"#include "*) ppsh_include;;
			*) printf %s\\n "$line" || exit;; # exit when can not print
		esac || break
	done
}



err() {
	printf %s\\n >&2 "${0##*/}: $1"
	exit "${2-2}"
}
log() {
	printf %s\\n >&2 "${0##*/}: $1"
}

in_line() {
	printf %s\\n ", in line ${line_num}: '$line'"
}

getvar() {
	var=${line#*"#"}
	var=${var#" "}
	var=${var#*" "}
	case $var in [!a-zA-Z_]*|?*[!a-zA-Z_0-9]*)
		err "invalid var$(in_line)"
	esac
}


ppsh_define() {
	getvar
	eval "ppsh_var_$var=''"
}
ppsh_undef() {
	getvar
	eval "unset ppsh_var_$var"
}
ppsh_dumpvar() {
	getvar
	eval "echo $var=\${ppsh_var_${var}+1}\${ppsh_var_${var}-0}" # consider/todo: write set var to exact same value with unix quotes or unset when unest
}

ppsh_ifdef() {
	err "todo ppsh_ifdef fn"
}
ppsh_else() {
	err "todo ppsh_else fn"
}
ppsh_endif() {
	err "todo ppsh_endif fn"
}

ppsh_include() {
	err "todo ppsh_include fn"
}





readfile=${1-"-"}

case $readfile in
	-) main;;
	*) main < "$readfile";;
esac

